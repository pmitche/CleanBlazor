@inject IStringLocalizer<AddEditExtendedAttributeModalLocalization> Localizer

@typeparam TId
@typeparam TEntityId
@typeparam TEntity
@using Microsoft.Extensions.Localization
@using BlazorHero.CleanArchitecture.Domain.Enums
@typeparam TExtendedAttribute

<EditForm Model="@AddEditExtendedAttributeModel" OnValidSubmit="SaveAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator"/>
    <MudDialog>
        <TitleContent>
            @{
                if (AddEditExtendedAttributeModel.Id.Equals(default))
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1"/>
                        @Localizer["Add Extended Attribute"]
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1"/>
                        @Localizer["Update Extended Attribute"]
                    </MudText>
                }
            }
        </TitleContent>
        <DialogContent>
            <MudGrid>
                @if (AddEditExtendedAttributeModel.Id.Equals(default) != true)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField Disabled For="@(() => AddEditExtendedAttributeModel.Id)" @bind-Value="AddEditExtendedAttributeModel.Id" Label="@Localizer["Id"]"/>
                    </MudItem>
                }
                <MudItem xs="12" md="6">
                    <MudTextField Disabled For="@(() => AddEditExtendedAttributeModel.EntityId)" @bind-Value="AddEditExtendedAttributeModel.EntityId" Label="@Localizer["Entity Id"]"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudSelect T="EntityExtendedAttributeType" Label="@Localizer["Type"]" For="@(() => AddEditExtendedAttributeModel.Type)" @bind-Value="AddEditExtendedAttributeModel.Type" Variant="Variant.Filled">
                        @foreach (var typeName in Enum.GetNames(typeof(EntityExtendedAttributeType)))
                        {
                            <MudSelectItem T="EntityExtendedAttributeType" Value="@(Enum.GetValues<EntityExtendedAttributeType>().FirstOrDefault(x => x.ToString() == typeName))">@typeName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField For="@(() => AddEditExtendedAttributeModel.Key)" @bind-Value="AddEditExtendedAttributeModel.Key" Label="@Localizer["Key"]"/>
                </MudItem>
                @if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.Decimal)
                {
                    <MudItem xs="12" md="6">
                        <MudNumericField For="@(() => AddEditExtendedAttributeModel.Decimal)" @bind-Value="AddEditExtendedAttributeModel.Decimal" Label="@Localizer["Decimal"]"/>
                    </MudItem>
                }
                else if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.Text)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField For="@(() => AddEditExtendedAttributeModel.Text)" @bind-Value="AddEditExtendedAttributeModel.Text" Label="@Localizer["Text"]"/>
                    </MudItem>
                }
                else if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.DateTime)
                {
                    <MudItem xs="12" md="6">
                        <MudDatePicker @ref="_datePicker" PickerVariant="PickerVariant.Dialog" @bind-Date="AddEditExtendedAttributeModel.DateTime" Label="@Localizer["Date"]">
                            <PickerActions Context="anotherName">
                                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _datePicker.Clear())">@Localizer["Clear"]</MudButton>
                                <MudButton OnClick="@(() => _datePicker.Close(false))">@Localizer["Cancel"]</MudButton>
                                <MudButton Color="Color.Primary" OnClick="@(() => _datePicker.Close())">@Localizer["Ok"]</MudButton>
                            </PickerActions>
                        </MudDatePicker>

                        <MudTimePicker @ref="_timePicker" PickerVariant="PickerVariant.Dialog" Label="@Localizer["Time"]" @bind-Time="_time">
                            <PickerActions Context="anotherName">
                                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _timePicker.Clear())">@Localizer["Clear"]</MudButton>
                                <MudButton OnClick="@(() => _timePicker.Close(false))">@Localizer["Cancel"]</MudButton>
                                <MudButton Color="Color.Primary" OnClick="@(() => _timePicker.Close())">@Localizer["Ok"]</MudButton>
                            </PickerActions>
                        </MudTimePicker>
                    </MudItem>
                }
                else if (AddEditExtendedAttributeModel.Type == EntityExtendedAttributeType.Json)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField For="@(() => AddEditExtendedAttributeModel.Json)" @bind-Value="AddEditExtendedAttributeModel.Json" Label="@Localizer["Json"]" Variant="Variant.Outlined" Lines="10"/>
                    </MudItem>
                }
                <MudItem xs="12" md="6">
                    <MudTextField T="string" For="@(() => AddEditExtendedAttributeModel.ExternalId)" @bind-Value="AddEditExtendedAttributeModel.ExternalId" Label="@Localizer["External Id"]"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField T="string" For="@(() => AddEditExtendedAttributeModel.Group)" @bind-Value="AddEditExtendedAttributeModel.Group" Label="@Localizer["Group"]"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField For="@(() => AddEditExtendedAttributeModel.Description)" @bind-Value="AddEditExtendedAttributeModel.Description" Label="@Localizer["Description"]"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudCheckBox For="@(() => AddEditExtendedAttributeModel.IsActive)" @bind-Checked="@AddEditExtendedAttributeModel.IsActive" Color="Color.Secondary" Label="@Localizer["Is Active"]"/>
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="Cancel">@Localizer["Cancel"]</MudButton>
            @if (AddEditExtendedAttributeModel.Id.Equals(default) != true)
            {
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Secondary">@Localizer["Update"]</MudButton>
            }
            else
            {
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Success">@Localizer["Save"]</MudButton>
            }
        </DialogActions>
    </MudDialog>
</EditForm>
